/*
Web Fonts Usando @font-face

Las fuentes también se pueden agregar usando un conjunto de reglas @font-face en su hoja de estilo CSS en lugar de usar un elemento <link> en su documento HTML. Como se mencionó anteriormente, las fuentes se pueden descargar como cualquier otro archivo en la web. Vienen en algunos formatos de archivo diferentes, como:

OTF (Fuente OpenType)
TTF (Fuente TrueType)
WOFF (formato de fuente abierta web)
WOFF2 (formato de fuente abierta web 2)


Los diferentes formatos son una progresión de estándares sobre cómo funcionarán las fuentes con diferentes navegadores, siendo WOFF2 el más progresivo. Es una buena idea incluir los formatos TTF, WOFF y WOFF2 con su regla @font-face para garantizar la compatibilidad en todos los navegadores.

Echemos un vistazo a cómo usar @font-face usando la misma fuente Roboto que antes:

Dentro de la sección "Selected Families", puede usar el botón "Download" para descargar los archivos de fuentes a su computadora. Los archivos se descargarán en un solo formato, en este caso, TTF. Puede usar una herramienta como Google Web Fonts Helper para generar tipos de archivos adicionales para WOFF y WOFF2.

https://google-webfonts-helper.herokuapp.com/fonts

Cuando tenga los archivos que necesita, muévalos a una carpeta dentro del directorio de trabajo de su sitio web y estará listo para usarlos en un conjunto de reglas @font-face.

@font-face {
  font-family: 'MyParagraphFont';
  src: url('fonts/Roboto.woff2') format('woff2'),
       url('fonts/Roboto.woff') format('woff'),
       url('fonts/Roboto.ttf') format('truetype');
}

Echemos un vistazo al ejemplo anterior, línea por línea:

La regla @font-face arroba se utiliza como selector. Se recomienda definir el conjunto de reglas @font-face en la parte superior de su hoja de estilo CSS.

Dentro del bloque de declaración, la propiedad font-family se usa para establecer un nombre personalizado para la fuente descargada. El nombre puede ser cualquier cosa que elija, pero debe estar entre comillas. En el ejemplo, la fuente se llama 'MyParagraphFont', ya que esta fuente se usará para todos los párrafos.

La propiedad src contiene tres valores, cada uno de los cuales especifica la ruta relativa al archivo de fuente y su formato. En este ejemplo, los archivos de fuentes se almacenan dentro de una carpeta llamada fonts dentro del directorio de trabajo.

Tenga en cuenta que el orden de los diferentes formatos es importante porque nuestro navegador comenzará desde la parte superior de la lista y buscará hasta que encuentre un formato de fuente compatible. Obtenga más información sobre la priorización de formatos en CSS-Tricks.
Una vez que se define la regla @font-face, ¡puede usar la fuente en su hoja de estilo!

https://css-tricks.com/snippets/css/using-font-face-in-css/

p {
  font-family: 'MyParagraphFont', sans-serif;
}

Al igual que con cualquier otra fuente, puede usar la propiedad font-family para establecer la fuente en cualquier elemento HTML. Se puede hacer referencia a la fuente descargada con el nombre que proporcionó como el valor de la propiedad de la familia de fuentes en el conjunto de reglas @font-face, en este caso, 'MyParagraphFont'.
*/

/*
1. Cambiemos la fuente del banner usando archivos de fuentes locales. Si abre el directorio fonts, notará que hemos agregado archivos de fuentes locales .ttf.

En la parte superior de style.css, cree un conjunto de reglas @font-face y asígnele la propiedad font-family y 'MiFamilia' como su valor.

2. Dentro de la regla @font-face, agregue una propiedad src con las siguientes rutas y formatos como valores, en el siguiente orden:

src: url('./fonts/Roboto-Regular.ttf')

*/

/* Universal Styles */
html {
    font-size: 16px;
    font-family: 'Arial', sans-serif;
  }
  
  body {
    background-color: #F2F2F2;  
    text-align: center;  
  }
  
  h1 {
    padding: 20px;
    color: white;
    font-size: 28px;
    text-align: center;
    font-family: Georgia;
    text-transform: uppercase;
    letter-spacing: 0.3em;
  }
  
  h2 {
    padding: 40px 20px 0 20px;
    font-size: 24px;
    text-align: center;
  }
  
  a {
    text-decoration: none;
  }
  
  p {
    max-width: 900px;
    margin: 0 auto;
    padding: 20px;
    text-align: justify;
  }
  
  
  /* Header */
  .header {
    position: fixed;
    top: 0;
    width: 100%;
    padding: 20px 0;
    background-color: #fff;
    font-size: 14px;
    font-weight: 900;
  }
  
  .header li {
    display: inline-block;
    padding: 10px;
  }
  
  .header a {
    color: #4A4A4A;
  }
  
  a.home {
    color: #4D00FF;
  }
  
  
  /* Banner Section */
  .banner {
    margin-top: 74px;
    padding: 40px 0 100px 0;
    background-color: #4D00FF;
  }
  
  .banner p {
    border-top: 1px solid #fff;
    border-bottom: 1px solid #fff;
    color: #ffffff;
    font-weight: lighter;
    word-spacing: 0.25em;
    line-height: 1.4;
  }
  
  
  /* Editorial Sections */
  .editorial {
    padding-bottom: 40px;
    color: #717171;
    font-family: 'Trebuchet MS', 'Times New Roman', serif;
  }
  
  /* Font Card Sections */
  .font-card {
    padding: 10px 0 40px 0;
    background-color: #ffffff;
    text-align: center;
  }
  
  .font-card .creator {
    padding: 10px 20px;
    font-size: 16px;
    font-style: italic;
  }
  
  .sample {
    display: inline-block;  
    padding: 5px 40px;
  }
  
  .sample .text {
    color: #4D00FF;
    font-size: 100px;
  }
  
  .garamond {
    font-family: Garamond;
  }
  
  .helvetica {
    font-family: Helvetica;
  }
  
  .space {
    font-family: 'Space Mono', monospace;
  }
  
  .bold {
    font-weight: 900;
  }
  
  .regular {
    font-weight: normal;
  }
  
  .italic {
    font-weight: normal;
    font-style: italic;
  }